// generated from rosidl_typesupport_freertps_cpp/resource/srv__type_support.cpp.template

@#######################################################################
@# EmPy template for generating <srv>__type_support.cpp files
@#
@# Context:
@#  - spec (rosidl_parser.ServiceSpecification)
@#    Parsed specification of the .srv file
@#  - get_header_filename_from_msg_name (function)
@#######################################################################
@
#include <iostream>
#include <sstream>

#include <rosidl_generator_c/service_type_support.h>
// This is defined in the rosidl_typesupport_freertps_cpp package and
// is in the include/rosidl_typesupport_freertps_cpp/impl folder.
#include <rosidl_generator_cpp/message_type_support.hpp>
#include <rosidl_generator_cpp/service_type_support.hpp>
#include <rosidl_typesupport_freertps_cpp/visibility_control.h>
#include <rmw/rmw.h>

@{header_file_name = get_header_filename_from_msg_name(spec.srv_name)}@
#include "@(spec.pkg_name)/srv/@(header_file_name)__struct.hpp"
@{req_header_file_name = get_header_filename_from_msg_name(spec.srv_name + '_Request')}@
@{res_header_file_name = get_header_filename_from_msg_name(spec.srv_name + '_Response')}@
#include "@(spec.pkg_name)/srv/freertps/@(req_header_file_name)__type_support.hpp"
#include "@(spec.pkg_name)/srv/freertps/@(res_header_file_name)__type_support.hpp"

#include "rosidl_typesupport_freertps_cpp/identifier.hpp"
#include "rosidl_typesupport_freertps_cpp/service_type_support.h"

@{
# Same as @(spec.pkg_name)::srv::freertps::@(spec.srv_name)
__dds_msg_type_prefix = "{spec.pkg_name}::srv::freertps::{spec.srv_name}".format(spec=spec)
# Same as @(spec.pkg_name)::srv::freertps::Sample_@(spec.srv_name)
__dds_sample_type_prefix = "{spec.pkg_name}::srv::freertps::Sample_{spec.srv_name}".format(spec=spec)
}@


namespace @(spec.pkg_name)
{

namespace srv
{

namespace typesupport_freertps_cpp
{

const char *
create_requester__@(spec.srv_name)(
  void * untyped_participant, const char * service_name,
  void **untyped_requester, void ** untyped_reader,
  void * (* allocator)(size_t))
{
  (void)untyped_participant;
  (void)service_name;
  (void)untyped_requester;
  (void)untyped_reader;
  (void)allocator;
  return "create_requester() not yet implemented";
}

const char *
create_responder__@(spec.srv_name)(
  void * untyped_participant, const char * service_name,
  void **untyped_responder, void **untyped_reader,
  void * (* allocator)(size_t))
{
  (void)untyped_participant;
  (void)service_name;
  (void)untyped_responder;
  (void)untyped_reader;
  (void)allocator;
  return "create_requester() not yet implemented";
}

const char *
send_request__@(spec.srv_name)(
  void * untyped_requester, const void * untyped_ros_request, int64_t * sequence_number)
{
  (void)untyped_requester;
  (void)untyped_ros_request;
  (void)sequence_number;
  return "send_request() not yet implemented";
}

const char *
take_request__@(spec.srv_name)(
  void * untyped_responder, void * untyped_ros_request_header, void * untyped_ros_request,
  bool * taken)
{
  (void)untyped_responder;
  (void)untyped_ros_request_header;
  (void)untyped_ros_request;
  (void)taken;
  return "take_request() not yet implemented";
}

const char *
send_response__@(spec.srv_name)(
  void * untyped_responder, const void * untyped_ros_request_header,
  const void * untyped_ros_response)
{
  (void)untyped_responder;
  (void)untyped_ros_request_header;
  (void)untyped_ros_response;
  return "send_response() not yet implemented";
}

const char *
take_response__@(spec.srv_name)(
  void * untyped_requester, void * untyped_ros_request_header, void * untyped_ros_response,
  bool * taken)
{
  (void)untyped_requester;
  (void)untyped_ros_request_header;
  (void)untyped_ros_response;
  (void)taken;
  return "take_response() not yet implemented";
}

const char *
destroy_requester__@(spec.srv_name)(void * untyped_requester, void (* deallocator)(void *))
{
  (void)untyped_requester;
  (void)deallocator;
  return "destroy_requester() not yet implemented";
}

const char *
destroy_responder__@(spec.srv_name)(void * untyped_responder, void (* deallocator)(void *))
{
  (void)untyped_responder;
  (void)deallocator;
  return "destroy_responder() not yet implemented";
}

static service_type_support_callbacks_t callbacks = {
  "@(spec.pkg_name)",
  "@(spec.srv_name)",
  &create_requester__@(spec.srv_name),
  &destroy_requester__@(spec.srv_name),
  &create_responder__@(spec.srv_name),
  &destroy_responder__@(spec.srv_name),
  &send_request__@(spec.srv_name),
  &take_request__@(spec.srv_name),
  &send_response__@(spec.srv_name),
  &take_response__@(spec.srv_name),
};

static rosidl_service_type_support_t handle = {
  rosidl_typesupport_freertps_cpp::typesupport_freertps_identifier,
  &callbacks
};

}  // namespace typesupport_freertps_cpp

}  // namespace srv

}  // namespace @(spec.pkg_name)


namespace rosidl_typesupport_freertps_cpp
{

template<>
ROSIDL_TYPESUPPORT_FREERTPS_CPP_EXPORT
const rosidl_service_type_support_t *
get_service_type_support_handle_freertps<@(spec.pkg_name)::srv::@(spec.srv_name)>()
{
  return &@(spec.pkg_name)::srv::typesupport_freertps_cpp::handle;
}

}  // namespace rosidl_typesupport_freertps_cpp
